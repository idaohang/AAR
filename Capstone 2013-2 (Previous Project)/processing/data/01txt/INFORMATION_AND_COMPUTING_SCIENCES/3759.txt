We provide an abstract command language for real-time programs and outline how a partial correctness semantics can be used to compute execution times.  The notions of a timed command, refinement of a timed command, the command traversal condition, and the worst-case and best-case execution time of a command are formally introduced and investigated with the help of an underlying weakest liberal precondition semantics.  The central result is a theory for the computation of worst-case and best-case execution times from the underlying semantics based on supremum and infimum calculations.  The framework is applied to the analysis of a message transmitter program and its implementation.
