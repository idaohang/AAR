The research reported here investigates variation in first year university studentsâ€™ early experiences of learning to program, with a particular focus on revealing differences in how they go about learning to program. A phenomenographic research approach was used to reveal variation in how the act of learning to program may be constituted amongst first year university students. Semi-structured interviews were conducted with students who had either recently completed, or were enrolled in, a university-level introductory programming subject. Analysis revealed that students might go about learning to program in any of five different ways; by (1) Following â€“ where learning to program is experienced as â€˜getting throughâ€™ the unit,  (2) Coding â€“ where learning to program is experienced as learning to code, (3) Understanding and integrating â€“ where learning to program is experienced as learning to write a program through understanding and integrating concepts, (4) Problem solving â€“ where learning to program is experienced as learning to do what it takes to solve a problem, and (5) Participating or enculturation â€“ where learning to program is experienced as discovering what it means to become a programmer. The relationships between these different approaches to learning are represented diagrammatically. The mapping of the variation constitutes a framework within which one aspect of the teaching and learning of introductory programming, how students go about it, may be understood. Implications for teaching and learning in introductory university curricula are discussed.
